/* A binary tree node has data, pointer to left child
   and a pointer to right child  
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

vector<int> findSpiral(Node *root){
    vector<int> ans;
    if(root==NULL)  return ans;
    stack<Node *>s1;
    stack<Node *>s2;
    s1.push(root);
    while(!s1.empty() || !s2.empty()){
        while(!s1.empty()){
            Node *tmp=s1.top();
            s1.pop();
            ans.push_back(tmp->data);
            if(tmp->right)
                s2.push(tmp->right);
            if(tmp->left)
                s2.push(tmp->left);
        }
        while(!s2.empty()){
            Node *tmp=s2.top();
            s2.pop();
            ans.push_back(tmp->data);
            if(tmp->left)
                s1.push(tmp->left);
            if(tmp->right)
                s1.push(tmp->right);
        }
    }
    return ans;
}
