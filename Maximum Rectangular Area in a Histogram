
// Function to return Maximum Rectangular area in a histogram
// arr[]: input array
// n: size of array
long getMaxArea(long long hist[], int n){
    stack<int> s;
	long max_area = 0;
	long tp; 
	long area_with_top; 
	int i = 0; 
	
	while (i < n){ 
		if (s.empty() || hist[s.top()] <= hist[i]) 
			s.push(i++); 
		else
		{ 
			tp = s.top(); // store the top index 
			s.pop(); 
			area_with_top = hist[tp] * (s.empty() ? i : i - s.top() - 1); 

			if (max_area < area_with_top) 
				max_area = area_with_top; 
		} 
	} 
	while (s.empty() == false) { 
		tp = s.top(); 
		s.pop(); 
		area_with_top = hist[tp] * (s.empty() ? i : i - s.top() - 1); 

		if (max_area < area_with_top) 
			max_area = area_with_top; 
	} 
	return max_area;
}
