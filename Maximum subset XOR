// Function to return maximum XOR subset in set[]
int maxSubarrayXOR(int A[], int n)
{
    int index=0;
    for(int i=31;i>=0;i--){
        int maxIndex=index;
        int maxElement=INT_MIN;
        for(int j=index;j<n;j++){
            if((A[j] & (1<<i))!=0 && A[j] > maxElement)
                maxElement=A[j], maxIndex=j;
        }
        
        if(maxElement==INT_MIN)
            continue;
        swap(A[index],A[maxIndex]);
        maxIndex=index;
        for(int j=0;j<n;j++){
            if (j != maxIndex &&(A[j] & (1 << i)) != 0) 
                A[j] = A[j] ^ A[maxIndex]; 
        }
        index++;
    }
    int res = 0; 
    for (int i = 0; i < n; i++) 
        res ^= A[i]; 
    return res; 
}
