/* You are required to complete this method */

// return the minimum number of swaps required to sort the arra
int minSwaps(int arr[], int N){
    pair<int,int> arrPos[N];
    for(int i=0;i<N;i++){
        arrPos[i].first=arr[i];
        arrPos[i].second=i;
    }
    sort(arrPos,arrPos+N);
    vector<bool> visit(N,false);
    int ans=0;
    for(int i=0;i<N;i++){
        if(visit[i] || arrPos[i].second==i)
            continue; 
        int cycle_size = 0; 
        int j = i; 
        while(!visit[j]){ 
            visit[j] = 1;
            j = arrPos[j].second; 
            cycle_size++;
        } 

        if (cycle_size > 0){ 
            ans += (cycle_size - 1); 
        }
    }
    return ans;
}
