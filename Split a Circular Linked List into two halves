/* The structure of linked list is the following
struct Node
{
  int data;
  struct Node *next;
  
  Node(int x){
      data = x;
      next = NULL;
  }
};
*/

//  function which splits the circular linked list.  head is pointer
// to head Node of given lined list.  head1_ref1 and *head_ref2
// are pointers to head pointers of resultant two halves.

void splitList(Node *head, Node **head1_ref, Node **head2_ref)
{
    Node *slow=head,*fast=head;
    
    while(fast->next!=head && fast->next->next!=head){
        slow=slow->next;
        fast=fast->next->next;
    }
    /* If there are even elements in list 
       then move fast_ptr */
    if(fast->next->next == head)  
        fast= fast->next;  
          
    /* Set the head pointer of first half */
    *head1_ref = head;  
          
    /* Set the head pointer of second half */
    if(head->next != head)  
        *head2_ref = slow->next;  
          
    /* Make second half circular */
    fast->next = slow->next;  
          
    /* Make first half circular */
    slow->next = head;  
}
